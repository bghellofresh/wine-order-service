# Environment tag
environment: ahoy
tag: latest
tribe: yourtribe
squad: yoursquad
deployments:
  api:
    # Number of pods to run
    replicaCount: 1
    containerPort: 80
    repository: quay.io/hellofresh/<CHARTNAME>
    pullPolicy: Always
    #env:
    #  foo: "bar"
    # https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/

    # More info
    # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
    livenessProbe:
      httpGet:
        path: /status
        port: http
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 3
      successThreshold: 1
      failureThreshold: 3
    readinessProbe:
      httpGet:
        path: /status
        port: http
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 3
      successThreshold: 1
      failureThreshold: 3
    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi
    nodeSelector: {}
    tolerations: []
    affinity: {}
    hpa:
      enabled: false

  consumers:
    # Number of pods to run
    replicaCount: 1
    containerPort: 80
    repository: quay.io/hellofresh/<CHARTNAME>
    pullPolicy: Always
    # More info
    # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
    livenessProbe:
      httpGet:
        path: /status
        port: http
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 3
      successThreshold: 1
      failureThreshold: 3
    readinessProbe:
      httpGet:
        path: /status
        port: http
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 3
      successThreshold: 1
      failureThreshold: 3
    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi
    nodeSelector: {}
    tolerations: []
    affinity: {}
    hpa:
      enabled: false


services:
  api:
    enabled: true
    type: ClusterIP
  consumers:
    enabled: false
# Enable if the service is a producer and needs access from legacy infrastructure
ingresses:
  api:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
    path: /
    hosts:
      - "<CHARTNAME>.{{ .Values.entryDnsName }}.{{ .Values.TLD }}"
  consumers:
    enabled: false
cronJobs:
  cronjob1:
    repository: quay.io/hellofresh/<CHARTNAME>
    pullPolicy: Always
    schedule: "*/1 * * * *"
    command: ["/bin/echo"]
    args:
      - "$(date)"
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 3
    concurrencyPolicy: Forbid
# KV pairs for values for ENV vars
configMap:
  foo: "bar"
