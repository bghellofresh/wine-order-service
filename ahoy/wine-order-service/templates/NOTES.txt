{{- range $key, $value := .Values.ingresses }}
{{- $services := $.Values.services }}
{{- $currentService := index $services $key }}
{{- if and ($value.enabled) (not $currentService.enabled) }}
WARNING: Ingress is enabled but service is not enabled. The ingress will not be created.
{{- end }}
1. Get the application URL by running these commands:
{{- if and ($value.enabled) ($currentService.enabled) }}
{{- range $value.hosts }}
  http{{ if $value.tls }}s{{ end }}://{{ . }}{{ $value.path }}
{{- end }}
{{- end }}
{{- if $currentService.enabled }}
{{- if contains "NodePort" $currentService.type }}
  export NODE_PORT=$(kubectl get --namespace {{ $.Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "wine-order-service.fullname" $ }}-{{ $key }})
  export NODE_IP=$(kubectl get nodes --namespace {{ $.Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" $currentService.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get svc -w {{ template "wine-order-service.fullname" $ }}-{{ $key }}-k8s'
  export SERVICE_IP=$(kubectl get svc --namespace {{ $.Release.Namespace }} {{ template "wine-order-service.fullname" $ }}-{{ $key }}-k8s -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ $currentService.port }}
{{- else if contains "ClusterIP" $currentService.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ $.Release.Namespace }} -l "app={{ template "wine-order-service.name" $ }}-{{ $key }},release={{ $.Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl port-forward $POD_NAME 8080:80
{{- end }}
{{- end }}
{{- end }}
